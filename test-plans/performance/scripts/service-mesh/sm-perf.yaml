# Performance bookinfo - Adding Envoy Nighthawk to the definition
##################################################################################################
# Baseline services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: baseline 
  labels:
    app: baseline 
    service: baseline 
spec:
  ports:
  - port: 9080
    name: http
  selector:
    app: baseline 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bookinfo-baseline
  labels:
    account: baseline-server 
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: server-config 
  namespace: default
data:
  config.yaml: |-
    static_resources:
      listeners:
        - address:
            socket_address:
              address: 0.0.0.0
              port_value: 9080 
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    generate_request_id: false
                    codec_type: AUTO
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: service
                          domains:
                            - "*"
                    http_filters:
                      - name: dynamic-delay
                        typed_config:
                          "@type": type.googleapis.com/nighthawk.server.ResponseOptions
                      - name: test-server # before envoy.router because order matters!
                        typed_config:
                          "@type": type.googleapis.com/nighthawk.server.ResponseOptions
                          response_body_size: 10
                          v3_response_headers:
                            - { header: { key: "foo", value: "bar" } }
                            - {
                                header: { key: "foo", value: "bar2" },
                                append: true,
                              }
                            - { header: { key: "x-nh", value: "1" } }
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                          dynamic_stats: false
    admin:
      access_log_path: /tmp/envoy.log
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baseline-v1
  labels:
    app: baseline 
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: baseline 
      version: v1
  template:
    metadata:
      labels:
        app: baseline 
        version: v1
    spec:
      containers:
      - name: baseline 
        image: envoyproxy/nighthawk-dev:latest 
        imagePullPolicy: IfNotPresent
          #command: ["/bin/ash", "-c", "sleep 10000000"]
        command: ["nighthawk_test_server","-c", "/tmp/config/config.yaml"]
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: config-volume
          mountPath: /tmp/config
        - name: tmp
          mountPath: /tmp
        securityContext:
          runAsUser: 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app 
                operator: NotIn
                values:
                - workload 
      volumes:
      - name: config-volume
        configMap:
          name: server-config
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: load-v1
  labels:
    app: workload 
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: workload 
      version: v1
  template:
    metadata:
      labels:
        app: workload 
        version: v1
    spec:
      containers:
      - name: benchmark 
        image: envoyproxy/nighthawk-dev:latest 
        imagePullPolicy: IfNotPresent
        command: ["/bin/ash", "-c", "sleep 10000000"]
        securityContext:
          runAsUser: 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app 
                operator: In
                values:
                - workload 
---
